// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

model Users {
  id        Int        @id @default(autoincrement())
  name      String
  photo     Bytes?
  email     String     @unique
  password  String
  tasks     Tasks[]    @relation("UserTasks")
  projects  Projects[] @relation("UserProjects")

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Projects {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  tasks       Tasks[]   @relation("ProjectTasks")
  users       Users[]   @relation("UserProjects")

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Tasks {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  status      TaskStatus @default(PENDING)
  dueDate     DateTime
  project     Projects    @relation("ProjectTasks", fields: [projectId], references: [id])
  projectId   Int
  user        Users       @relation("UserTasks", fields: [userId], references: [id])
  userId      Int

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

